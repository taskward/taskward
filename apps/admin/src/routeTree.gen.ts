/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SplatRouteImport } from './routes/$/route'
import { Route as Base404RouteImport } from './routes/_base/404/route'
import { Route as BaseIndexRouteImport } from './routes/_base/index/route'

// Create Virtual Routes

const BaseRouteLazyImport = createFileRoute('/_base')()

// Create/Update Routes

const BaseRouteLazyRoute = BaseRouteLazyImport.update({
  id: '/_base',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/_base/route.lazy').then((d) => d.Route))

const SplatRouteRoute = SplatRouteImport.update({
  path: '/$',
  getParentRoute: () => rootRoute,
} as any)

const Base404RouteRoute = Base404RouteImport.update({
  path: '/404',
  getParentRoute: () => BaseRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/_base/404/route.lazy').then((d) => d.Route),
)

const BaseIndexRouteRoute = BaseIndexRouteImport.update({
  path: '/',
  getParentRoute: () => BaseRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/_base/index/route.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$': {
      id: '/$'
      path: '/$'
      fullPath: '/$'
      preLoaderRoute: typeof SplatRouteImport
      parentRoute: typeof rootRoute
    }
    '/_base': {
      id: '/_base'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof BaseRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/_base/': {
      id: '/_base/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof BaseIndexRouteImport
      parentRoute: typeof BaseRouteLazyImport
    }
    '/_base/404': {
      id: '/_base/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof Base404RouteImport
      parentRoute: typeof BaseRouteLazyImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  SplatRouteRoute,
  BaseRouteLazyRoute: BaseRouteLazyRoute.addChildren({
    BaseIndexRouteRoute,
    Base404RouteRoute,
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/$",
        "/_base"
      ]
    },
    "/$": {
      "filePath": "$/route.tsx"
    },
    "/_base": {
      "filePath": "_base/route.lazy.tsx",
      "children": [
        "/_base/",
        "/_base/404"
      ]
    },
    "/_base/": {
      "filePath": "_base/index/route.tsx",
      "parent": "/_base"
    },
    "/_base/404": {
      "filePath": "_base/404/route.tsx",
      "parent": "/_base"
    }
  }
}
ROUTE_MANIFEST_END */
