/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './../../routes/__root'
import { Route as PublicRouteImport } from './../../routes/_public/route'
import { Route as BaseRouteImport } from './../../routes/_base/route'
import { Route as SplatRouteImport } from './../../routes/$/route'
import { Route as PublicSignupRouteImport } from './../../routes/_public/signup/route'
import { Route as PublicLoginRouteImport } from './../../routes/_public/login/route'
import { Route as PublicForgotPasswordRouteImport } from './../../routes/_public/forgot-password/route'
import { Route as BaseProfileRouteImport } from './../../routes/_base/profile/route'
import { Route as BaseChangePasswordRouteImport } from './../../routes/_base/change-password/route'
import { Route as Base404RouteImport } from './../../routes/_base/404/route'
import { Route as BaseIndexRouteImport } from './../../routes/_base/index/route'
import { Route as BaseDevOverviewRouteImport } from './../../routes/_base/dev/overview/route'
import { Route as BaseDevChartsRouteImport } from './../../routes/_base/dev/charts/route'

// Create/Update Routes

const PublicRouteRoute = PublicRouteImport.update({
  id: '/_public',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./../../routes/_public/route.lazy').then((d) => d.Route),
)

const BaseRouteRoute = BaseRouteImport.update({
  id: '/_base',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./../../routes/_base/route.lazy').then((d) => d.Route),
)

const SplatRouteRoute = SplatRouteImport.update({
  path: '/$',
  getParentRoute: () => rootRoute,
} as any)

const PublicSignupRouteRoute = PublicSignupRouteImport.update({
  path: '/signup',
  getParentRoute: () => PublicRouteRoute,
} as any).lazy(() =>
  import('./../../routes/_public/signup/route.lazy').then((d) => d.Route),
)

const PublicLoginRouteRoute = PublicLoginRouteImport.update({
  path: '/login',
  getParentRoute: () => PublicRouteRoute,
} as any).lazy(() =>
  import('./../../routes/_public/login/route.lazy').then((d) => d.Route),
)

const PublicForgotPasswordRouteRoute = PublicForgotPasswordRouteImport.update({
  path: '/forgot-password',
  getParentRoute: () => PublicRouteRoute,
} as any).lazy(() =>
  import('./../../routes/_public/forgot-password/route.lazy').then(
    (d) => d.Route,
  ),
)

const BaseProfileRouteRoute = BaseProfileRouteImport.update({
  path: '/profile',
  getParentRoute: () => BaseRouteRoute,
} as any).lazy(() =>
  import('./../../routes/_base/profile/route.lazy').then((d) => d.Route),
)

const BaseChangePasswordRouteRoute = BaseChangePasswordRouteImport.update({
  path: '/change-password',
  getParentRoute: () => BaseRouteRoute,
} as any).lazy(() =>
  import('./../../routes/_base/change-password/route.lazy').then(
    (d) => d.Route,
  ),
)

const Base404RouteRoute = Base404RouteImport.update({
  path: '/404',
  getParentRoute: () => BaseRouteRoute,
} as any).lazy(() =>
  import('./../../routes/_base/404/route.lazy').then((d) => d.Route),
)

const BaseIndexRouteRoute = BaseIndexRouteImport.update({
  path: '/',
  getParentRoute: () => BaseRouteRoute,
} as any).lazy(() =>
  import('./../../routes/_base/index/route.lazy').then((d) => d.Route),
)

const BaseDevOverviewRouteRoute = BaseDevOverviewRouteImport.update({
  path: '/dev/overview',
  getParentRoute: () => BaseRouteRoute,
} as any).lazy(() =>
  import('./../../routes/_base/dev/overview/route.lazy').then((d) => d.Route),
)

const BaseDevChartsRouteRoute = BaseDevChartsRouteImport.update({
  path: '/dev/charts',
  getParentRoute: () => BaseRouteRoute,
} as any).lazy(() =>
  import('./../../routes/_base/dev/charts/route.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$': {
      id: '/$'
      path: '/$'
      fullPath: '/$'
      preLoaderRoute: typeof SplatRouteImport
      parentRoute: typeof rootRoute
    }
    '/_base': {
      id: '/_base'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof BaseRouteImport
      parentRoute: typeof rootRoute
    }
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicRouteImport
      parentRoute: typeof rootRoute
    }
    '/_base/': {
      id: '/_base/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof BaseIndexRouteImport
      parentRoute: typeof BaseRouteImport
    }
    '/_base/404': {
      id: '/_base/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof Base404RouteImport
      parentRoute: typeof BaseRouteImport
    }
    '/_base/change-password': {
      id: '/_base/change-password'
      path: '/change-password'
      fullPath: '/change-password'
      preLoaderRoute: typeof BaseChangePasswordRouteImport
      parentRoute: typeof BaseRouteImport
    }
    '/_base/profile': {
      id: '/_base/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof BaseProfileRouteImport
      parentRoute: typeof BaseRouteImport
    }
    '/_public/forgot-password': {
      id: '/_public/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof PublicForgotPasswordRouteImport
      parentRoute: typeof PublicRouteImport
    }
    '/_public/login': {
      id: '/_public/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof PublicLoginRouteImport
      parentRoute: typeof PublicRouteImport
    }
    '/_public/signup': {
      id: '/_public/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof PublicSignupRouteImport
      parentRoute: typeof PublicRouteImport
    }
    '/_base/dev/charts': {
      id: '/_base/dev/charts'
      path: '/dev/charts'
      fullPath: '/dev/charts'
      preLoaderRoute: typeof BaseDevChartsRouteImport
      parentRoute: typeof BaseRouteImport
    }
    '/_base/dev/overview': {
      id: '/_base/dev/overview'
      path: '/dev/overview'
      fullPath: '/dev/overview'
      preLoaderRoute: typeof BaseDevOverviewRouteImport
      parentRoute: typeof BaseRouteImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  SplatRouteRoute,
  BaseRouteRoute: BaseRouteRoute.addChildren({
    BaseIndexRouteRoute,
    Base404RouteRoute,
    BaseChangePasswordRouteRoute,
    BaseProfileRouteRoute,
    BaseDevChartsRouteRoute,
    BaseDevOverviewRouteRoute,
  }),
  PublicRouteRoute: PublicRouteRoute.addChildren({
    PublicForgotPasswordRouteRoute,
    PublicLoginRouteRoute,
    PublicSignupRouteRoute,
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/$",
        "/_base",
        "/_public"
      ]
    },
    "/$": {
      "filePath": "$/route.tsx"
    },
    "/_base": {
      "filePath": "_base/route.tsx",
      "children": [
        "/_base/",
        "/_base/404",
        "/_base/change-password",
        "/_base/profile",
        "/_base/dev/charts",
        "/_base/dev/overview"
      ]
    },
    "/_public": {
      "filePath": "_public/route.tsx",
      "children": [
        "/_public/forgot-password",
        "/_public/login",
        "/_public/signup"
      ]
    },
    "/_base/": {
      "filePath": "_base/index/route.tsx",
      "parent": "/_base"
    },
    "/_base/404": {
      "filePath": "_base/404/route.tsx",
      "parent": "/_base"
    },
    "/_base/change-password": {
      "filePath": "_base/change-password/route.tsx",
      "parent": "/_base"
    },
    "/_base/profile": {
      "filePath": "_base/profile/route.tsx",
      "parent": "/_base"
    },
    "/_public/forgot-password": {
      "filePath": "_public/forgot-password/route.tsx",
      "parent": "/_public"
    },
    "/_public/login": {
      "filePath": "_public/login/route.tsx",
      "parent": "/_public"
    },
    "/_public/signup": {
      "filePath": "_public/signup/route.tsx",
      "parent": "/_public"
    },
    "/_base/dev/charts": {
      "filePath": "_base/dev/charts/route.tsx",
      "parent": "/_base"
    },
    "/_base/dev/overview": {
      "filePath": "_base/dev/overview/route.tsx",
      "parent": "/_base"
    }
  }
}
ROUTE_MANIFEST_END */
